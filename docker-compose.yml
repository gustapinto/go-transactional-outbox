networks:
  go-transactional-outbox-network:
    driver: bridge

volumes:
  kafka_data:

services:
  db:
    image: postgres:16.3-alpine
    container_name: go-transactional-outbox-db
    restart: unless-stopped
    ports:
      - 5432:5432
    networks:
      - go-transactional-outbox-network
    environment:
      POSTGRES_USER: go-transactional-outbox
      POSTGRES_PASSWORD: go-transactional-outbox
      POSTGRES_DB: go-transactional-outbox

  broker:
    image: docker.io/bitnami/kafka:3.8.1
    container_name: go-transactional-outbox-broker
    restart: unless-stopped
    ports:
      - 9092:9092
    networks:
      - go-transactional-outbox-network
    volumes:
      - ./kafka_data:/bitnami:Z
      - ./:/app:Z
    environment:
      KAFKA_CFG_NODE_ID: 0
      KAFKA_CFG_PROCESS_ROLES: controller,broker
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 0@broker:9093
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://:9092
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: PLAINTEXT

  order-service:
    image: golang:1.23.2-alpine3.20
    tty: true
    container_name: go-transactional-outbox-order-service
    working_dir: /go-transactional-outbox/app/order-service/cmd
    command: go run .
    volumes:
      - ./:/go-transactional-outbox/app:Z
    networks:
      - go-transactional-outbox-network
    depends_on:
      - db
    environment:
      POSTGRES_DSN: "postgresql://go-transactional-outbox:go-transactional-outbox@db:5432/go-transactional-outbox?sslmode=disable"

  message-relay-service:
    image: golang:1.23.2-alpine3.20
    tty: true
    container_name: go-transactional-outbox-message-relay-service
    working_dir: /go-transactional-outbox/app/message-relay-service/cmd
    restart: unless-stopped
    command: go run .
    volumes:
      - ./:/go-transactional-outbox/app:Z
    networks:
      - go-transactional-outbox-network
    depends_on:
      - db
      - broker
    environment:
      POSTGRES_DSN: "postgresql://go-transactional-outbox:go-transactional-outbox@db:5432/go-transactional-outbox?sslmode=disable"
      KAFKA_SEEDS: broker:9092

  inventory-service:
    image: golang:1.23.2-alpine3.20
    tty: true
    container_name: go-transactional-outbox-inventory-service
    working_dir: /go-transactional-outbox/app/inventory-service/cmd
    restart: unless-stopped
    command: go run .
    volumes:
      - ./:/go-transactional-outbox/app:Z
    networks:
      - go-transactional-outbox-network
    depends_on:
      - db
      - broker
    environment:
      POSTGRES_DSN: "postgresql://go-transactional-outbox:go-transactional-outbox@db:5432/go-transactional-outbox?sslmode=disable"
      KAFKA_SEEDS: broker:9092
